% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/XGR.iterate_overlap.R
\name{XGR.iterate_overlap}
\alias{XGR.iterate_overlap}
\title{Check overlap with XGR annotations}
\usage{
XGR.iterate_overlap(
  lib.selections = c("ENCODE_TFBS_ClusteredV3_CellTypes", "TFBS_Conserved",
    "ReMap_PublicAndEncode_TFBS", "Uniform_TFBS"),
  subset_DT,
  save_path = FALSE,
  nThread = 1
)
}
\arguments{
\item{lib.selections}{Which XGR annotations to check overlap with.
For full list of libraries see
\href{http://xgr.r-forge.r-project.org/#annotations-at-the-genomic-region-level}{
 here.}}

\item{subset_DT}{Data.frame with at least the following columns:
\describe{
\item{SNP}{SNP RSID}
\item{CHR}{chromosome}
\item{POS}{position}
}}

\item{save_path}{Save the results as a \code{data.frame}.}

\item{nThread}{Multi-thread across libraries.}
}
\description{
Automatically handles different file formats provided by XGR
 (e.g. varying kinds of nested/unnested \code{GRanges}).
Then returns a \code{Granges} object with only the XGR annotation ranges
that overlap with the SNPs in \code{subset_DT}.
The \code{GRanges} merges hits from \code{subset_DT}.
}
\examples{
\dontrun{
gr.hits <- XGR.iterate_overlap(
    lib.selections = c("ENCODE_TFBS_ClusteredV3_CellTypes"),
    subset_DT = echodata::BST1
)
}
}
\seealso{
Other XGR: 
\code{\link{XGR.download_and_standardize}()},
\code{\link{XGR.enrichment_bootstrap}()},
\code{\link{XGR.enrichment_plot}()},
\code{\link{XGR.enrichment}()},
\code{\link{XGR.filter_assays}()},
\code{\link{XGR.filter_sources}()},
\code{\link{XGR.import_annotations}()},
\code{\link{XGR.iterate_enrichment}()},
\code{\link{XGR.merge_and_process}()},
\code{\link{XGR.parse_metadata}()},
\code{\link{XGR.plot_enrichment}()},
\code{\link{XGR.plot_peaks}()},
\code{\link{XGR.prepare_foreground_background}()},
\code{\link{XGR.sep_handler}()},
\code{\link{granges_to_bed}()}
}
\concept{XGR}
\keyword{internal}
